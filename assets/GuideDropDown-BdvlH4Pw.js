import{d as i,e as A,k as B,o as r,c as d,b as c,t as w,F as C,i as H,y as O,a as g,u as y}from"./index-CytIcuzL.js";const j=["id"],I=["id"],N=["aria-labelledby"],R=["onClick"],f={__name:"DropDown",props:{id:{type:String},dropLabel:{type:String},dropData:{type:Object}},emits:["call-act"],setup(S,{emit:u}){const s=S,t=i(s.dropLabel),e=i(),k=()=>{let l=s.dropData.find(a=>a.selected==!0);l?(e.value=l,t.value=e.value.label):t.value=s.dropLabel};A(()=>{k()});const _=()=>{let l=window.innerHeight,a=document.querySelector(`#${s.id}`),n=a.querySelector(".dropdown-list"),p=document.querySelectorAll(".dropdown-list"),o=a.querySelectorAll(".dropdown-item"),q=a.getBoundingClientRect().height,L=a.getBoundingClientRect().top;p.forEach(b=>{b.style.display="none"}),n.style.display="block";let E=n.getBoundingClientRect().height,$=q+E+L;l>$?n.classList.remove("top"):n.classList.add("top"),O(()=>{if(e.value){let b=s.dropData.findIndex(x=>x.value==e.value.value);o[b].focus()}else o[0].focus();document.addEventListener("click",v),document.addEventListener("keydown",m)})},v=l=>{let a=l.target,n=document.querySelector(`#${s.id} .dropdown-list`);!a.classList.contains("dropdown-trigger")&!a.classList.contains("dropdown-item")&&(n.style.display="none",document.removeEventListener("click",v))},m=l=>{let a=document.activeElement,n=document.querySelector(`#${s.id} .dropdown-list`),p=n.querySelectorAll(".dropdown-item")[0],o=n.querySelectorAll(".dropdown-item")[s.dropData.length-1];l.key=="Tab"&&(l.shiftKey&&a==p||!l.shiftKey&&a==o)&&(l.preventDefault(),n.style.display="none",document.removeEventListener("keydown",m))},h=u,D=l=>{let a=document.querySelector(`#${s.id}`),n=a.querySelector(".dropdown-list"),p=s.dropData.find(o=>o.value==l);e.value=p,t.value=p.label,n.style.display="none",a.querySelector(".dropdown-trigger").focus(),h("call-act",e.value)};return B(()=>{document.removeEventListener("click",v),document.removeEventListener("keydown",m)}),(l,a)=>(r(),d("div",{id:s.id,class:"dropdown"},[c("button",{type:"button",id:`${s.id}_trigger`,class:"dropdown-trigger","aria-haspopup":"menu","aria-expanded":"false",onClick:_},w(t.value),9,I),c("ul",{class:"dropdown-list",role:"menu","aria-labelledby":`${s.id}_trigger`,tabindex:"-1",style:{display:"none"}},[(r(!0),d(C,null,H(s.dropData,(n,p)=>(r(),d("li",{role:"presentation",key:p},[c("button",{type:"button",role:"menuitem",class:"dropdown-item",onClick:o=>D(n.value)},w(n.label),9,R)]))),128))],8,N)],8,j))}},T={class:"contents"},V=y(`<h2 class="guide-title">Drop Down</h2><h3 class="guide-stitle">1. Basic</h3><div class="guide-info script"><pre><span class="comment">// component import</span>
<span class="import">import</span> <span class="props">DropDown</span> <span class="import">from</span> <span class="val">&#39;@/components/DropDown.vue&#39;</span>;

<span class="comment">// dropdown list</span>
<span class="tag">const</span> <span class="evt">dropSample</span> = <span class="func">ref</span><span class="mark">(</span><span class="func">[</span>
    <span class="braket">{</span> <span class="props">label:</span> <span class="val">&#39;Sample 1&#39;</span>, <span class="props">value:</span> <span class="val">&#39;1&#39;</span> <span class="braket">}</span>,
    <span class="braket">{</span> <span class="props">label:</span> <span class="val">&#39;Sample 2&#39;</span>, <span class="props">value:</span> <span class="val">&#39;2&#39;</span> <span class="braket">}</span>,
    <span class="braket">{</span> <span class="props">label:</span> <span class="val">&#39;Sample 3&#39;</span>, <span class="props">value:</span> <span class="val">&#39;3&#39;</span> <span class="braket">}</span>,
    <span class="braket">{</span> <span class="props">label:</span> <span class="val">&#39;Sample 4&#39;</span>, <span class="props">value:</span> <span class="val">&#39;4&#39;</span> <span class="braket">}</span>,
    <span class="braket">{</span> <span class="props">label:</span> <span class="val">&#39;Sample 5&#39;</span>, <span class="props">value:</span> <span class="val">&#39;5&#39;</span> <span class="braket">}</span>,
    <span class="braket">{</span> <span class="props">label:</span> <span class="val">&#39;Sample 6&#39;</span>, <span class="props">value:</span> <span class="val">&#39;6&#39;</span> <span class="braket">}</span>,
    <span class="braket">{</span> <span class="props">label:</span> <span class="val">&#39;Sample 7&#39;</span>, <span class="props">value:</span> <span class="val">&#39;7&#39;</span> <span class="braket">}</span>
<span class="func">]</span><span class="mark">)</span>;
</pre></div><div class="guide-info html"><pre><span class="arrow">&lt;</span><span class="component">drop-down</span>
    <span class="props">id</span>=&quot;<span class="val">DropdownSample1</span>&quot;
    :<span class="props">drop-label</span>=&quot;<span class="val">\`Drop-down Sample\`</span>&quot;
    :<span class="props">drop-data</span>=&quot;<span class="props">dropSample</span>&quot;
    @<span class="props">call-act</span>=&quot;<span class="func">dropdownAct</span>&quot;
<span class="arrow">&gt;&lt;/</span><span class="component">drop-down</span><span class="arrow">&gt;</span>;
</pre></div>`,4),F={class:"guide-cont"},K=y(`<h3 class="guide-stitle">2. Selected</h3><div class="guide-info">부여할 item 목록에서 &quot;selected: true&quot; 추가</div><div class="guide-info script"><pre><span class="tag">const</span> <span class="evt">dropSample2</span> = <span class="func">reactive</span><span class="mark">(</span><span class="func">[</span>
    <span class="braket">{</span> <span class="props">label:</span> <span class="val">&#39;Sample 1&#39;</span>, <span class="props">value:</span> <span class="val">&#39;1&#39;</span> <span class="braket">}</span>,
    <span class="braket">{</span> <span class="props">label:</span> <span class="val">&#39;Sample 2&#39;</span>, <span class="props">value:</span> <span class="val">&#39;2&#39;</span> <span class="braket">}</span>,
    <span class="braket">{</span> <span class="props">label:</span> <span class="val">&#39;Sample 3&#39;</span>, <span class="props">value:</span> <span class="val">&#39;3&#39;</span>, <span class="props">selected:</span> <span class="tag">true</span> <span class="braket">}</span>,
    <span class="braket">{</span> <span class="props">label:</span> <span class="val">&#39;Sample 4&#39;</span>, <span class="props">value:</span> <span class="val">&#39;4&#39;</span> <span class="braket">}</span>,
    <span class="braket">{</span> <span class="props">label:</span> <span class="val">&#39;Sample 5&#39;</span>, <span class="props">value:</span> <span class="val">&#39;5&#39;</span> <span class="braket">}</span>
<span class="func">]</span><span class="mark">)</span>;
</pre></div>`,3),M={class:"guide-cont"},P={__name:"GuideDropDown",setup(S){const u=i([{label:"Sample 1",value:"1"},{label:"Sample 2",value:"2"},{label:"Sample 3",value:"3"},{label:"Sample 4",value:"4"},{label:"Sample 5",value:"5"},{label:"Sample 6",value:"6"},{label:"Sample 7",value:"7"}]),s=i([{label:"Sample 1",value:"1"},{label:"Sample 2",value:"2"},{label:"Sample 3",value:"3",selected:!0},{label:"Sample 4",value:"4"},{label:"Sample 5",value:"5"}]),t=e=>{console.log("select:",e)};return(e,k)=>(r(),d("div",T,[V,c("div",F,[g(f,{id:"DropdownSample1","drop-label":"Drop-down Sample","drop-data":u.value,onCallAct:t},null,8,["drop-data"])]),K,c("div",M,[g(f,{id:"DropdownSample2","drop-label":"Drop-down Sample2","drop-data":s.value,onCallAct:t},null,8,["drop-data"])])]))}};export{P as default};
