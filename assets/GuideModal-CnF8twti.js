import{r as o,i as y,c as V,a,e as t,l,d as w,h as v,o as B,p as g,q as s}from"./index-IN-5UTd3.js";const A={class:"main-contents"},P=w(`<h2 class="guide-title">Modals</h2><div class="guide-info"><strong>Vuetify3 Dialogs</strong><br><a href="https://vuetifyjs.com/en/components/dialogs/#usage" target="_blank"> https://vuetifyjs.com/en/components/dialogs/#usage </a></div><h3 class="guide-stitle">1. Alert or Confirm Modal</h3><div class="guide-info script"><pre><span class="tag">const</span> <span class="evt">alertDialog</span> = <span class="func">ref</span><span class="mark">(</span><span class="boolean">false</span><span class="mark">)</span>;
</pre></div><div class="guide-info html"><pre><span class="comment">// alert 혹은 confirm 일 경우, class값에 &#39;small&#39; 추가</span>
<span class="arrow">&lt;</span><span class="component">v-dialog</span>
    <span class="props">id</span>=<span class="val">&quot;SampleAlert&quot;</span>
    <span class="props">class</span>=<span class="val">&quot;modal-layout small&quot;</span>
    <span class="props">v-model</span>=&quot;<span class="props">alertDialog</span>&quot;
    <span class="props">transition</span>=<span class="val">&quot;dialog-transition&quot;</span>
<span class="arrow">&gt;</span>
    <span class="comment">// modal 띄울 button - modal 닫은 후 focus 이동을 위해 dialog 안에 버튼 위치</span>
    <span class="arrow">&lt;</span><span class="tag">template</span> <span class="props">v-slot</span>:<span class="props">activator</span>=&quot;<span class="func">{</span> <span class="props">props</span>: <span class="evt">activatorProps</span> <span class="func">}</span>&quot;<span class="arrow">&gt;</span>
        <span class="arrow">&lt;</span><span class="tag">button</span> <span class="props">type</span>=<span class="val">&quot;button&quot;</span> <span class="props">class</span>=<span class="val">&quot;btn-primary&quot;</span> <span class="props">v-bind</span>=&quot;<span class="evt">activatorProps</span>&quot;<span class="arrow">&gt;</span>
            <span class="arrow">&lt;</span><span class="tag">span</span><span class="arrow">&gt;</span>Alert<span class="arrow">&lt;/</span><span class="tag">span</span><span class="arrow">&gt;</span>
        <span class="arrow">&lt;/</span><span class="tag">button</span><span class="arrow">&gt;</span>
    <span class="arrow">&lt;/</span><span class="tag">template</span><span class="arrow">&gt;</span>

    <span class="comment">// modal 내용</span>
    <span class="arrow">&lt;</span><span class="component">v-card</span><span class="arrow">&gt;</span>
        <span class="arrow">&lt;</span><span class="tag">template</span> <span class="props">v-slot</span>:<span class="props">actions</span><span class="arrow">&gt;</span>
            <span class="arrow">&lt;</span><span class="tag">div</span> <span class="props">class</span>=<span class="val">&quot;modal-body&quot;</span><span class="arrow">&gt;</span>
                <span class="arrow">&lt;</span><span class="tag">p</span><span class="arrow">&gt;</span>Your application will relaunch automatically after the update is complete.<span class="arrow">&lt;/</span><span class="tag">p</span><span class="arrow">&gt;</span>
            <span class="arrow">&lt;/</span><span class="tag">div</span><span class="arrow">&gt;</span>

            <span class="arrow">&lt;</span><span class="tag">div</span> <span class="props">class</span>=<span class="val">&quot;modal-footer&quot;</span><span class="arrow">&gt;</span>
                <span class="comment">// &#39;확인&#39; 버튼의 click 이벤트에 대한 함수는 상황에 맞게 작성</span>
                <span class="arrow">&lt;</span><span class="tag">button</span> <span class="props">type</span>=<span class="val">&quot;button&quot;</span> <span class="props">class</span>=<span class="val">&quot;modal-btn-primary&quot;</span> @<span class="props">click</span>=&quot;<span class="func">alertCallback</span>&quot;<span class="arrow">&gt;</span>
                    <span class="arrow">&lt;</span><span class="tag">span</span><span class="arrow">&gt;</span>확인<span class="arrow">&lt;/</span><span class="tag">span</span><span class="arrow">&gt;</span>
                <span class="arrow">&lt;/</span><span class="tag">button</span><span class="arrow">&gt;</span>
            <span class="arrow">&lt;/</span><span class="tag">div</span><span class="arrow">&gt;</span>
        <span class="arrow">&lt;/</span><span class="tag">template</span><span class="arrow">&gt;</span>
    <span class="arrow">&lt;/</span><span class="component">v-card</span><span class="arrow">&gt;</span>
<span class="arrow">&lt;/</span><span class="component">v-dialog</span><span class="arrow">&gt;</span>
</pre></div>`,5),S={class:"guide-cont type-row"},$=a("span",null,"Alert",-1),F=[$],U=a("div",{class:"modal-body"},[a("p",null,"Your application will relaunch automatically after the update is complete.")],-1),x=a("span",null,"확인",-1),N=[x],E=a("span",null,"Confirm",-1),W=[E],j=a("div",{class:"modal-body"},[a("p",null,"Your application will relaunch automatically after the update is complete.")],-1),O={class:"modal-footer"},z=a("span",null,"취소",-1),G=[z],L=a("span",null,"확인",-1),T=[L],H=w(`<h3 class="guide-stitle">2. Full screen Modal</h3><div class="guide-info">※ mobile에서만 전체 화면으로 나타남</div><div class="guide-info script"><pre><span class="tag">const</span> <span class="evt">fullDialog</span> = <span class="func">ref</span><span class="mark">(</span><span class="boolean">false</span><span class="mark">)</span>;
</pre></div><div class="guide-info html"><pre><span class="comment">// full screen 일 경우, class값에 &#39;full&#39; 추가</span>
<span class="arrow">&lt;</span><span class="component">v-dialog</span>
    <span class="props">id</span>=<span class="val">&quot;SampleModal&quot;</span>
    <span class="props">class</span>=<span class="val">&quot;modal-layout full&quot;</span>
    <span class="props">v-model</span>=&quot;<span class="props">fullDialog</span>&quot;
    :<span class="props">transition</span>=&quot;!!<span class="props">isMobile</span> ? <span class="val">&#39;dialog-bottom-transition&#39;</span> : <span class="val">&#39;dialog-transition&#39;</span>&quot;
    :<span class="props">fullscreen</span>=&quot;!!<span class="props">isMobile</span> ? <span class="boolean">true</span> : <span class="boolean">false</span>&quot;
<span class="arrow">&gt;</span>
    <span class="comment">// modal 띄울 button</span>
    <span class="arrow">&lt;</span><span class="tag">template</span> <span class="props">v-slot</span>:<span class="props">activator</span>=&quot;<span class="func">{</span> <span class="props">props</span>: <span class="evt">activatorProps</span> <span class="func">}</span>&quot;<span class="arrow">&gt;</span>
        <span class="arrow">&lt;</span><span class="tag">button</span> <span class="props">type</span>=<span class="val">&quot;button&quot;</span> <span class="props">class</span>=<span class="val">&quot;btn-primary&quot;</span> <span class="props">v-bind</span>=&quot;<span class="evt">activatorProps</span>&quot;<span class="arrow">&gt;</span>
            <span class="arrow">&lt;</span><span class="tag">span</span><span class="arrow">&gt;</span>Full screen<span class="arrow">&lt;/</span><span class="tag">span</span><span class="arrow">&gt;</span>
        <span class="arrow">&lt;/</span><span class="tag">button</span><span class="arrow">&gt;</span>
    <span class="arrow">&lt;/</span><span class="tag">template</span><span class="arrow">&gt;</span>

    <span class="comment">// modal 내용</span>
    <span class="arrow">&lt;</span><span class="component">v-card</span><span class="arrow">&gt;</span>
        <span class="arrow">&lt;</span><span class="tag">template</span> <span class="props">v-slot</span>:<span class="props">actions</span><span class="arrow">&gt;</span>
            <span class="arrow">&lt;</span><span class="tag">div</span> <span class="props">class</span>=<span class="val">&quot;modal-header&quot;</span><span class="arrow">&gt;</span>
                <span class="arrow">&lt;</span><span class="tag">h1</span> <span class="props">class</span>=<span class="val">&quot;modal-title&quot;</span><span class="arrow">&gt;</span>Full screen Modal<span class="arrow">&lt;/</span><span class="tag">h1</span><span class="arrow">&gt;</span>
            <span class="arrow">&lt;/</span><span class="tag">div</span><span class="arrow">&gt;</span>

            <span class="arrow">&lt;</span><span class="tag">div</span> <span class="props">class</span>=<span class="val">&quot;modal-body&quot;</span><span class="arrow">&gt;</span>
                <span class="arrow">&lt;</span><span class="tag">p</span><span class="arrow">&gt;</span>Your application will relaunch automatically after the update is complete.<span class="arrow">&lt;/</span><span class="tag">p</span><span class="arrow">&gt;</span>
            <span class="arrow">&lt;/</span><span class="tag">div</span><span class="arrow">&gt;</span>

            <span class="arrow">&lt;</span><span class="tag">div</span> <span class="props">class</span>=<span class="val">&quot;modal-footer&quot;</span><span class="arrow">&gt;</span>
                <span class="arrow">&lt;</span><span class="tag">button</span> <span class="props">type</span>=<span class="val">&quot;button&quot;</span> <span class="props">class</span>=<span class="val">&quot;modal-btn-gray&quot;</span> @<span class="props">click</span>=&quot;<span class="props">fullDialog</span> = <span class="boolean">false</span>&quot;<span class="arrow">&gt;</span>
                    <span class="arrow">&lt;</span><span class="tag">span</span><span class="arrow">&gt;</span>닫기<span class="arrow">&lt;/</span><span class="tag">span</span><span class="arrow">&gt;</span>
                <span class="arrow">&lt;/</span><span class="tag">button</span><span class="arrow">&gt;</span>
                <span class="comment">// &#39;확인&#39; 버튼의 click 이벤트에 대한 함수는 상황에 맞게 작성</span>
                <span class="arrow">&lt;</span><span class="tag">button</span> <span class="props">type</span>=<span class="val">&quot;button&quot;</span> <span class="props">class</span>=<span class="val">&quot;modal-btn-primary&quot;</span> @<span class="props">click</span>=&quot;<span class="func">fullModalCall</span>&quot;<span class="arrow">&gt;</span>
                    <span class="arrow">&lt;</span><span class="tag">span</span><span class="arrow">&gt;</span>확인<span class="arrow">&lt;/</span><span class="tag">span</span><span class="arrow">&gt;</span>
                <span class="arrow">&lt;/</span><span class="tag">button</span><span class="arrow">&gt;</span>
            <span class="arrow">&lt;/</span><span class="tag">div</span><span class="arrow">&gt;</span>

            <span class="arrow">&lt;</span><span class="tag">button</span> <span class="props">type</span>=<span class="val">&quot;button&quot;</span> <span class="props">class</span>=<span class="val">&quot;modal-close&quot;</span> @<span class="props">click</span>=&quot;<span class="props">fullDialog</span> = <span class="boolean">false</span>&quot;<span class="arrow">&gt;</span>
                <span class="arrow">&lt;</span><span class="tag">span <span class="props">class</span>=<span class="val">&quot;sr-only&quot;</span></span><span class="arrow">&gt;</span>닫기<span class="arrow">&lt;/</span><span class="tag">span</span><span class="arrow">&gt;</span>
            <span class="arrow">&lt;/</span><span class="tag">button</span><span class="arrow">&gt;</span>
        <span class="arrow">&lt;/</span><span class="tag">template</span><span class="arrow">&gt;</span>
    <span class="arrow">&lt;/</span><span class="component">v-card</span><span class="arrow">&gt;</span>
<span class="arrow">&lt;/</span><span class="component">v-dialog</span><span class="arrow">&gt;</span>
</pre></div>`,4),I={class:"guide-cont"},J=a("span",null,"Full screen",-1),K=[J],Q=a("div",{class:"modal-header"},[a("h1",{class:"modal-title"},"Full screen Modal")],-1),R=a("div",{class:"modal-body"},[a("p",null,[s(" Your application will relaunch automatically after the update is complete."),a("br"),s(" Your application will relaunch automatically after the update is complete."),a("br"),s(" Your application will relaunch automatically after the update is complete."),a("br"),s(" Your application will relaunch automatically after the update is complete."),a("br"),s(" Your application will relaunch automatically after the update is complete."),a("br"),s(" Your application will relaunch automatically after the update is complete."),a("br"),s(" Your application will relaunch automatically after the update is complete."),a("br"),s(" Your application will relaunch automatically after the update is complete."),a("br"),s(" Your application will relaunch automatically after the update is complete."),a("br"),s(" Your application will relaunch automatically after the update is complete."),a("br"),s(" Your application will relaunch automatically after the update is complete."),a("br"),s(" Your application will relaunch automatically after the update is complete."),a("br"),s(" Your application will relaunch automatically after the update is complete."),a("br"),s(" Your application will relaunch automatically after the update is complete."),a("br"),s(" Your application will relaunch automatically after the update is complete."),a("br"),s(" Your application will relaunch automatically after the update is complete."),a("br"),s(" Your application will relaunch automatically after the update is complete."),a("br"),s(" Your application will relaunch automatically after the update is complete."),a("br"),s(" Your application will relaunch automatically after the update is complete."),a("br"),s(" Your application will relaunch automatically after the update is complete."),a("br"),s(" Your application will relaunch automatically after the update is complete."),a("br"),s(" Your application will relaunch automatically after the update is complete."),a("br"),s(" Your application will relaunch automatically after the update is complete."),a("br"),s(" Your application will relaunch automatically after the update is complete."),a("br"),s(" Your application will relaunch automatically after the update is complete."),a("br"),s(" Your application will relaunch automatically after the update is complete."),a("br"),s(" Your application will relaunch automatically after the update is complete."),a("br"),s(" Your application will relaunch automatically after the update is complete."),a("br"),s(" Your application will relaunch automatically after the update is complete."),a("br"),s(" Your application will relaunch automatically after the update is complete."),a("br"),s(" Your application will relaunch automatically after the update is complete."),a("br"),s(" Your application will relaunch automatically after the update is complete."),a("br"),s(" Your application will relaunch automatically after the update is complete."),a("br"),s(" Your application will relaunch automatically after the update is complete. ")])],-1),X={class:"modal-footer"},Z=a("span",null,"닫기",-1),aa=[Z],sa=a("span",null,"확인",-1),na=[sa],pa=a("span",{class:"sr-only"},"닫기",-1),la=[pa],ta=a("div",{class:"modal-body"},[a("p",null,"Your application will relaunch automatically after the update is complete.")],-1),oa={class:"modal-footer"},ca=a("span",null,"닫기",-1),ra=[ca],ea=a("span",null,"확인",-1),ia=[ea],ua=w(`<h3 class="guide-stitle">3. Bottom-sheet Modal</h3><div class="guide-info">※ mobile에서만 bottom-sheet로 나타남</div><div class="guide-info script"><pre><span class="tag">const</span> <span class="evt">bottomDialog</span> = <span class="func">ref</span><span class="mark">(</span><span class="boolean">false</span><span class="mark">)</span>;
</pre></div><div class="guide-info html"><pre><span class="comment">// Bottom-sheet 일 경우, class값에 &#39;bottom&#39; 추가</span>
<span class="arrow">&lt;</span><span class="component">v-bottom-sheet</span>
    <span class="props">id</span>=<span class="val">&quot;SampleModal2&quot;</span>
    <span class="props">class</span>=<span class="val">&quot;modal-layout bottom&quot;</span>
    <span class="props">v-model</span>=&quot;<span class="props">bottomDialog</span>&quot;
    :<span class="props">transition</span>=&quot;!!<span class="props">isMobile</span> ? <span class="val">&#39;dialog-bottom-transition&#39;</span> : <span class="val">&#39;dialog-transition&#39;</span>&quot;
<span class="arrow">&gt;</span>
    <span class="comment">// modal 띄울 button</span>
    <span class="arrow">&lt;</span><span class="tag">template</span> <span class="props">v-slot</span>:<span class="props">activator</span>=&quot;<span class="func">{</span> <span class="props">props</span>: <span class="evt">activatorProps</span> <span class="func">}</span>&quot;<span class="arrow">&gt;</span>
        <span class="arrow">&lt;</span><span class="tag">button</span> <span class="props">type</span>=<span class="val">&quot;button&quot;</span> <span class="props">class</span>=<span class="val">&quot;btn-primary&quot;</span> <span class="props">v-bind</span>=&quot;<span class="evt">activatorProps</span>&quot;<span class="arrow">&gt;</span>
            <span class="arrow">&lt;</span><span class="tag">span</span><span class="arrow">&gt;</span>Bottom-sheet<span class="arrow">&lt;/</span><span class="tag">span</span><span class="arrow">&gt;</span>
        <span class="arrow">&lt;/</span><span class="tag">button</span><span class="arrow">&gt;</span>
    <span class="arrow">&lt;/</span><span class="tag">template</span><span class="arrow">&gt;</span>

    <span class="comment">// modal 내용</span>
    <span class="arrow">&lt;</span><span class="component">v-card</span><span class="arrow">&gt;</span>
        <span class="arrow">&lt;</span><span class="tag">template</span> <span class="props">v-slot</span>:<span class="props">actions</span><span class="arrow">&gt;</span>
            <span class="arrow">&lt;</span><span class="tag">div</span> <span class="props">class</span>=<span class="val">&quot;modal-header&quot;</span><span class="arrow">&gt;</span>
                <span class="arrow">&lt;</span><span class="tag">h1</span> <span class="props">class</span>=<span class="val">&quot;modal-title&quot;</span><span class="arrow">&gt;</span>Bottom-sheet Modal<span class="arrow">&lt;/</span><span class="tag">h1</span><span class="arrow">&gt;</span>
            <span class="arrow">&lt;/</span><span class="tag">div</span><span class="arrow">&gt;</span>

            <span class="arrow">&lt;</span><span class="tag">div</span> <span class="props">class</span>=<span class="val">&quot;modal-body&quot;</span><span class="arrow">&gt;</span>
                <span class="arrow">&lt;</span><span class="tag">p</span><span class="arrow">&gt;</span>Your application will relaunch automatically after the update is complete.<span class="arrow">&lt;/</span><span class="tag">p</span><span class="arrow">&gt;</span>
            <span class="arrow">&lt;/</span><span class="tag">div</span><span class="arrow">&gt;</span>

            <span class="arrow">&lt;</span><span class="tag">div</span> <span class="props">class</span>=<span class="val">&quot;modal-footer&quot;</span><span class="arrow">&gt;</span>
                <span class="arrow">&lt;</span><span class="tag">button</span> <span class="props">type</span>=<span class="val">&quot;button&quot;</span> <span class="props">class</span>=<span class="val">&quot;modal-btn-gray&quot;</span> @<span class="props">click</span>=&quot;<span class="props">bottomDialog</span> = <span class="boolean">false</span>&quot;<span class="arrow">&gt;</span>
                    <span class="arrow">&lt;</span><span class="tag">span</span><span class="arrow">&gt;</span>닫기<span class="arrow">&lt;/</span><span class="tag">span</span><span class="arrow">&gt;</span>
                <span class="arrow">&lt;/</span><span class="tag">button</span><span class="arrow">&gt;</span>
                <span class="comment">// &#39;확인&#39; 버튼의 click 이벤트에 대한 함수는 상황에 맞게 작성</span>
                <span class="arrow">&lt;</span><span class="tag">button</span> <span class="props">type</span>=<span class="val">&quot;button&quot;</span> <span class="props">class</span>=<span class="val">&quot;modal-btn-primary&quot;</span> @<span class="props">click</span>=&quot;<span class="func">BottomModalCall</span>&quot;<span class="arrow">&gt;</span>
                    <span class="arrow">&lt;</span><span class="tag">span</span><span class="arrow">&gt;</span>확인<span class="arrow">&lt;/</span><span class="tag">span</span><span class="arrow">&gt;</span>
                <span class="arrow">&lt;/</span><span class="tag">button</span><span class="arrow">&gt;</span>
            <span class="arrow">&lt;/</span><span class="tag">div</span><span class="arrow">&gt;</span>

            <span class="arrow">&lt;</span><span class="tag">button</span> <span class="props">type</span>=<span class="val">&quot;button&quot;</span> <span class="props">class</span>=<span class="val">&quot;modal-close&quot;</span> @<span class="props">click</span>=&quot;<span class="props">bottomDialog</span> = <span class="boolean">false</span>&quot;<span class="arrow">&gt;</span>
                <span class="arrow">&lt;</span><span class="tag">span <span class="props">class</span>=<span class="val">&quot;sr-only&quot;</span></span><span class="arrow">&gt;</span>닫기<span class="arrow">&lt;/</span><span class="tag">span</span><span class="arrow">&gt;</span>
            <span class="arrow">&lt;/</span><span class="tag">button</span><span class="arrow">&gt;</span>
        <span class="arrow">&lt;/</span><span class="tag">template</span><span class="arrow">&gt;</span>
    <span class="arrow">&lt;/</span><span class="component">v-card</span><span class="arrow">&gt;</span>
<span class="arrow">&lt;/</span><span class="component">v-bottom-sheet</span><span class="arrow">&gt;</span>
</pre></div>`,4),da={class:"guide-cont"},ma=a("span",null,"Bottom-sheet",-1),ga=[ma],wa=a("div",{class:"modal-header"},[a("h1",{class:"modal-title"},"Bottom-sheet Modal")],-1),ba=a("div",{class:"modal-body"},[a("p",null,[s(" Your application will relaunch automatically after the update is complete."),a("br"),s(" Your application will relaunch automatically after the update is complete."),a("br"),s(" Your application will relaunch automatically after the update is complete."),a("br"),s(" Your application will relaunch automatically after the update is complete."),a("br"),s(" Your application will relaunch automatically after the update is complete."),a("br"),s(" Your application will relaunch automatically after the update is complete."),a("br"),s(" Your application will relaunch automatically after the update is complete."),a("br"),s(" Your application will relaunch automatically after the update is complete."),a("br"),s(" Your application will relaunch automatically after the update is complete."),a("br"),s(" Your application will relaunch automatically after the update is complete."),a("br"),s(" Your application will relaunch automatically after the update is complete."),a("br"),s(" Your application will relaunch automatically after the update is complete."),a("br"),s(" Your application will relaunch automatically after the update is complete."),a("br"),s(" Your application will relaunch automatically after the update is complete."),a("br"),s(" Your application will relaunch automatically after the update is complete."),a("br"),s(" Your application will relaunch automatically after the update is complete."),a("br"),s(" Your application will relaunch automatically after the update is complete. ")])],-1),va={class:"modal-footer"},ha=a("span",null,"닫기",-1),fa=[ha],ya=a("span",null,"확인",-1),qa=[ya],_a=a("span",{class:"sr-only"},"닫기",-1),ka=[_a],Ya=w(`<h3 class="guide-stitle">※ Mobile Device Check</h3><div class="guide-info script"><pre><span class="import">import</span> <span class="mark">{</span> <span class="props">ref</span>, <span class="props">onBeforeMount</span> <span class="mark">}</span> <span class="import">from</span> <span class="val">&#39;vue&#39;</span>;

<span class="tag">const</span> <span class="evt">isMobile</span> = <span class="func">ref</span><span class="mark">(</span><span class="boolean">false</span><span class="mark">)</span>;
<span class="tag">const</span> <span class="func">chkMobile</span> = <span class="mark">()</span> <span class="tag">=&gt;</span> <span class="mark">{</span>
    <span class="tag">let</span> <span class="props">userAgent</span> = <span class="props">navigator</span>.<span class="props">userAgent</span>;
    <span class="tag">let</span> <span class="props">device</span> = <span class="braket">/Android</span>|<span class="braket">webOS</span>|<span class="braket">iPhone</span>|<span class="braket">iPad</span>|<span class="braket">iPod</span>|<span class="braket">BlackBerry</span>|<span class="braket">EMobile</span>|<span class="braket">Opera Mini/</span><span class="tag">i</span>;

    <span class="import">if</span> <span class="func">(</span><span class="props">device</span>.<span class="func">test</span><span class="braket">(</span><span class="props">userAgent</span><span class="braket">)</span><span class="func">)</span> <span class="func">{</span>
        <span class="evt">isMobile</span>.<span class="props">value</span> = <span class="boolean">true</span>;
    <span class="func">}</span> <span class="import">else</span> <span class="func">{</span>
        <span class="evt">isMobile</span>.<span class="props">value</span> = <span class="boolean">false</span>;
    <span class="func">}</span>
<span class="mark">}</span>;

<span class="func">onBeforeMount</span><span class="mark">(</span><span class="func">()</span> <span class="tag">=&gt;</span> <span class="func">{</span>
    <span class="func">chkMobile</span><span class="braket">()</span>;
<span class="func">}</span><span class="mark">)</span>;
</pre></div>`,2),Da={__name:"GuideModal",setup(Ma){const c=o(),h=()=>{f(),window.addEventListener("resize",()=>{f()})},f=()=>{window.innerWidth<1024?c.value=!0:c.value=!1};y(()=>h());const b=o(!1),u=o(!1),d=o(!1),r=o(!1),e=o(!1),q=()=>{console.log("alert callback!!"),b.value=!1},_=()=>{console.log("alert callback!!"),u.value=!1},k=()=>{console.log("full modal callback!!"),r.value=!0},Y=()=>{console.log("2nd modal callback!!"),r.value=!1},M=()=>{console.log("Bottom sheet callback!!"),e.value=!1};return y(()=>{h()}),(C,p)=>{const i=v("v-card"),m=v("v-dialog"),D=v("v-bottom-sheet");return B(),V("div",A,[P,a("div",S,[t(m,{id:"SampleAlert",class:"modal-layout small",modelValue:b.value,"onUpdate:modelValue":p[0]||(p[0]=n=>b.value=n),transition:"dialog-transition"},{activator:l(({props:n})=>[a("button",g({type:"button",class:"btn-primary"},n),F,16)]),default:l(()=>[t(i,{class:"modal-wrap"},{actions:l(()=>[U,a("div",{class:"modal-footer"},[a("button",{type:"button",class:"modal-btn-primary",onClick:q},N)])]),_:1})]),_:1},8,["modelValue"]),t(m,{id:"SampleAlert",class:"modal-layout small",modelValue:u.value,"onUpdate:modelValue":p[2]||(p[2]=n=>u.value=n),transition:"dialog-transition"},{activator:l(({props:n})=>[a("button",g({type:"button",class:"btn-primary"},n),W,16)]),default:l(()=>[t(i,{class:"modal-wrap"},{actions:l(()=>[j,a("div",O,[a("button",{type:"button",class:"modal-btn-gray",onClick:p[1]||(p[1]=n=>u.value=!1)},G),a("button",{type:"button",class:"modal-btn-primary",onClick:_},T)])]),_:1})]),_:1},8,["modelValue"])]),H,a("div",I,[t(m,{id:"SampleDialog1",class:"modal-layout full",modelValue:d.value,"onUpdate:modelValue":p[5]||(p[5]=n=>d.value=n),transition:c.value?"dialog-bottom-transition":"dialog-transition",fullscreen:!!c.value},{activator:l(({props:n})=>[a("button",g({type:"button",class:"btn-primary"},n),K,16)]),default:l(()=>[t(i,{class:"modal-wrap"},{actions:l(()=>[Q,R,a("div",X,[a("button",{type:"button",class:"modal-btn-gray",onClick:p[3]||(p[3]=n=>d.value=!1)},aa),a("button",{type:"button",class:"modal-btn-primary",onClick:k},na)]),a("button",{type:"button",class:"modal-close",onClick:p[4]||(p[4]=n=>d.value=!1)},la)]),_:1})]),_:1},8,["modelValue","transition","fullscreen"]),t(m,{id:"SampleDialog2",modelValue:r.value,"onUpdate:modelValue":p[7]||(p[7]=n=>r.value=n),class:"modal-layout small"},{default:l(()=>[t(i,{class:"modal-wrap"},{actions:l(()=>[ta,a("div",oa,[a("button",{type:"button",class:"modal-btn-gray",onClick:p[6]||(p[6]=n=>r.value=!1)},ra),a("button",{type:"button",class:"modal-btn-primary",onClick:Y},ia)])]),_:1})]),_:1},8,["modelValue"])]),ua,a("div",da,[t(D,{id:"SampleDialog1",class:"modal-layout bottom",modelValue:e.value,"onUpdate:modelValue":p[10]||(p[10]=n=>e.value=n),transition:c.value?"dialog-bottom-transition":"dialog-transition"},{activator:l(({props:n})=>[a("button",g({type:"button",class:"btn-primary"},n),ga,16)]),default:l(()=>[t(i,{class:"modal-wrap"},{actions:l(()=>[wa,ba,a("div",va,[a("button",{type:"button",class:"modal-btn-gray",onClick:p[8]||(p[8]=n=>e.value=!1)},fa),a("button",{type:"button",class:"modal-btn-primary",onClick:M},qa)]),a("button",{type:"button",class:"modal-close",onClick:p[9]||(p[9]=n=>e.value=!1)},ka)]),_:1})]),_:1},8,["modelValue","transition"])]),Ya])}}};export{Da as default};
