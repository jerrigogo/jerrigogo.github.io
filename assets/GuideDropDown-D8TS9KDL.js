import{d as k,l as B,x as C,o as r,c as d,b as c,t as g,F as H,i as O,k as j,A as w,a as y,v as _}from"./index-xp3fYU8o.js";const I=["id"],N=["id"],R=["aria-labelledby"],T=["onClick"],f={__name:"DropDown",props:{id:{type:String},dropLabel:{type:String},dropData:{type:Object}},emits:["call-act"],setup(b,{emit:i}){const s=b,t=k(s.dropLabel),n=k(),S=()=>{let l=s.dropData.find(a=>a.selected==!0);l?(n.value=l,t.value=n.value.label):t.value=s.dropLabel};B(()=>{S()});const h=()=>{let l=window.innerHeight,a=document.querySelector(`#${s.id}`),e=a.querySelector(".dropdown-list"),p=document.querySelectorAll(".dropdown-list"),o=a.querySelectorAll(".dropdown-item"),L=a.getBoundingClientRect().height,E=a.getBoundingClientRect().top;p.forEach(m=>{m.style.display="none"}),e.style.display="block";let x=e.getBoundingClientRect().height,A=L+x+E;l>A?e.classList.remove("top"):e.classList.add("top"),j(()=>{if(n.value){let m=s.dropData.findIndex($=>$.value==n.value.value);o[m].focus()}else o[0].focus();document.addEventListener("click",u),document.addEventListener("keydown",v)})},u=l=>{let a=l.target,e=document.querySelector(`#${s.id} .dropdown-list`);!a.classList.contains("dropdown-trigger")&!a.classList.contains("dropdown-item")&&(e.style.display="none",document.removeEventListener("click",u))},v=l=>{let a=document.activeElement,e=document.querySelector(`#${s.id} .dropdown-list`),p=e.querySelectorAll(".dropdown-item")[0],o=e.querySelectorAll(".dropdown-item")[s.dropData.length-1];l.key=="Tab"&&(l.shiftKey&&a==p||!l.shiftKey&&a==o)&&(l.preventDefault(),e.style.display="none",document.removeEventListener("keydown",v))},q=i,D=l=>{let a=document.querySelector(`#${s.id}`),e=a.querySelector(".dropdown-list"),p=s.dropData.find(o=>o.value==l);n.value=p,t.value=p.label,e.style.display="none",a.querySelector(".dropdown-trigger").focus(),q("call-act",n.value)};return C(()=>{document.removeEventListener("click",u),document.removeEventListener("keydown",v)}),(l,a)=>(r(),d("div",{id:s.id,class:"dropdown"},[c("button",{type:"button",id:`${s.id}_trigger`,class:"dropdown-trigger","aria-haspopup":"menu","aria-expanded":"false",onClick:h},g(t.value),9,N),c("ul",{class:"dropdown-list",role:"menu","aria-labelledby":`${s.id}_trigger`,tabindex:"-1",style:{display:"none"}},[(r(!0),d(H,null,O(s.dropData,(e,p)=>(r(),d("li",{role:"presentation",key:p},[c("button",{type:"button",role:"menuitem",class:"dropdown-item",onClick:o=>D(e.value)},g(e.label),9,T)]))),128))],8,R)],8,I))}},V={class:"contents"},F=_(`<h2 class="guide-title">Drop Down</h2><h3 class="guide-stitle">1. Basic</h3><div class="guide-info script"><pre><span class="tag">const</span> <span class="evt">dropSample</span> = <span class="func">reactive</span><span class="mark">(</span><span class="func">[</span>
    <span class="braket">{</span> <span class="props">label:</span> <span class="val">&#39;Sample 1&#39;</span>, <span class="props">value:</span> <span class="val">&#39;1&#39;</span> <span class="braket">}</span>,
    <span class="braket">{</span> <span class="props">label:</span> <span class="val">&#39;Sample 2&#39;</span>, <span class="props">value:</span> <span class="val">&#39;2&#39;</span> <span class="braket">}</span>,
    <span class="braket">{</span> <span class="props">label:</span> <span class="val">&#39;Sample 3&#39;</span>, <span class="props">value:</span> <span class="val">&#39;3&#39;</span> <span class="braket">}</span>,
    <span class="braket">{</span> <span class="props">label:</span> <span class="val">&#39;Sample 4&#39;</span>, <span class="props">value:</span> <span class="val">&#39;4&#39;</span> <span class="braket">}</span>,
    <span class="braket">{</span> <span class="props">label:</span> <span class="val">&#39;Sample 5&#39;</span>, <span class="props">value:</span> <span class="val">&#39;5&#39;</span> <span class="braket">}</span>,
    <span class="braket">{</span> <span class="props">label:</span> <span class="val">&#39;Sample 6&#39;</span>, <span class="props">value:</span> <span class="val">&#39;6&#39;</span> <span class="braket">}</span>,
    <span class="braket">{</span> <span class="props">label:</span> <span class="val">&#39;Sample 7&#39;</span>, <span class="props">value:</span> <span class="val">&#39;7&#39;</span> <span class="braket">}</span>
<span class="func">]</span><span class="mark">)</span>;
</pre></div><div class="guide-info html"><pre><span class="arrow">&lt;</span><span class="component">drop-down</span>
    <span class="props">id</span>=&quot;<span class="val">DropdownSample1</span>&quot;
    :<span class="props">drop-label</span>=&quot;<span class="val">\`Drop-down Sample\`</span>&quot;
    :<span class="props">drop-data</span>=&quot;<span class="props">dropSample</span>&quot;
    @<span class="props">call-act</span>=&quot;<span class="func">dropdownAct</span>&quot;
<span class="arrow">&gt;&lt;/</span><span class="component">drop-down</span><span class="arrow">&gt;</span>;
</pre></div>`,4),K={class:"guide-cont"},M=_(`<h3 class="guide-stitle">2. Selected</h3><div class="guide-info">부여할 item 목록에서 &quot;selected: true&quot; 추가</div><div class="guide-info script"><pre><span class="tag">const</span> <span class="evt">dropSample2</span> = <span class="func">reactive</span><span class="mark">(</span><span class="func">[</span>
    <span class="braket">{</span> <span class="props">label:</span> <span class="val">&#39;Sample 1&#39;</span>, <span class="props">value:</span> <span class="val">&#39;1&#39;</span> <span class="braket">}</span>,
    <span class="braket">{</span> <span class="props">label:</span> <span class="val">&#39;Sample 2&#39;</span>, <span class="props">value:</span> <span class="val">&#39;2&#39;</span> <span class="braket">}</span>,
    <span class="braket">{</span> <span class="props">label:</span> <span class="val">&#39;Sample 3&#39;</span>, <span class="props">value:</span> <span class="val">&#39;3&#39;</span>, <span class="props">selected:</span> <span class="tag">true</span> <span class="braket">}</span>,
    <span class="braket">{</span> <span class="props">label:</span> <span class="val">&#39;Sample 4&#39;</span>, <span class="props">value:</span> <span class="val">&#39;4&#39;</span> <span class="braket">}</span>,
    <span class="braket">{</span> <span class="props">label:</span> <span class="val">&#39;Sample 5&#39;</span>, <span class="props">value:</span> <span class="val">&#39;5&#39;</span> <span class="braket">}</span>
<span class="func">]</span><span class="mark">)</span>;
</pre></div>`,3),G={class:"guide-cont"},U={__name:"GuideDropDown",setup(b){const i=w([{label:"Sample 1",value:"1"},{label:"Sample 2",value:"2"},{label:"Sample 3",value:"3"},{label:"Sample 4",value:"4"},{label:"Sample 5",value:"5"},{label:"Sample 6",value:"6"},{label:"Sample 7",value:"7"}]),s=w([{label:"Sample 1",value:"1"},{label:"Sample 2",value:"2"},{label:"Sample 3",value:"3",selected:!0},{label:"Sample 4",value:"4"},{label:"Sample 5",value:"5"}]),t=n=>{console.log("select:",n)};return(n,S)=>(r(),d("div",V,[F,c("div",K,[y(f,{id:"DropdownSample1","drop-label":"Drop-down Sample","drop-data":i,onCallAct:t},null,8,["drop-data"])]),M,c("div",G,[y(f,{id:"DropdownSample2","drop-label":"Drop-down Sample2","drop-data":s,onCallAct:t},null,8,["drop-data"])])]))}};export{U as default};
